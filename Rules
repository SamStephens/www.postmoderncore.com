#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/stylesheet.*' do
  # don’t filter or layout
end

compile '/articles/**/*.md' do
  filter :kramdown
  layout '/articles.*'
end

compile '/articles/**/*.html' do
  layout '/articles.*'
end

compile '/artists.*' do
  layout '/redirect.*'
end

compile '/redirect/**/*.html' do
  layout '/redirect.*'
end

route '/stylesheet.*' do
  '/style.css'
end

compile '/static/**/*' do
end

compile '/*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout '/default.*'
  end
end

route '/articles/**/*' do
  "#{item.identifier.without_ext}/index.html"
end

route '/redirect/**/*' do
  identifier = item.identifier.without_ext
  identifier = identifier.sub('redirect/', '')
  "#{identifier}/index.html"
end


route '/static/**/*' do
  # /static/foo.html → /foo.html
  item.identifier.to_s.sub(/\A\/static/, '')
end

route '/**/*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.without_ext.chop
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier.without_ext + '.html'
  end
end

layout '**/*', :erb
